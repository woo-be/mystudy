/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.woo.checklist;

import com.woo.checklist.dao.ToDoDao;
import com.woo.checklist.dao.mysql.ToDoDaoImpl;
import com.woo.checklist.handler.toDo.ToDoAddHandler;
import com.woo.checklist.handler.toDo.ToDoDeleteHandler;
import com.woo.checklist.handler.toDo.ToDoListHandler;
import com.woo.checklist.handler.toDo.ToDoModifyHandler;
import com.woo.checklist.handler.toDo.ToDoViewHandler;
import com.woo.menu.MenuGroup;
import com.woo.util.DBConnectionPool;
import com.woo.util.Prompt;
import com.woo.util.TransactionManager;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class ServerApp {

  ExecutorService executorService = Executors.newCachedThreadPool();

  TransactionManager txManager;
  DBConnectionPool connectionPool;

  ToDoDao toDoDao;

  MenuGroup mainMenu;

  ServerApp() {
    prepareDatabase();
    prepareMenu();
  }

  public static void main(String[] args) {
    System.out.println("서버 실행됨!");
    new ServerApp().run();
  }

  void prepareMenu() {
    mainMenu = MenuGroup.getInstance("메인");

    MenuGroup toDoMenu = mainMenu.addGroup("할 일 목록");
    toDoMenu.addItem("등록", new ToDoAddHandler(txManager, toDoDao));
    toDoMenu.addItem("조회", new ToDoViewHandler(toDoDao));
    toDoMenu.addItem("수정", new ToDoModifyHandler(toDoDao));
    toDoMenu.addItem("완료", new ToDoDeleteHandler(toDoDao));
    toDoMenu.addItem("목록", new ToDoListHandler(toDoDao));

  }

  void prepareDatabase() {
    try {
      // JVM이 JDBC 드라이버 파일(.jar)에 설정된대로 자동으로 처리한다.
//      Driver driver = new com.mysql.cj.jdbc.Driver();
//      DriverManager.registerDriver(driver);

//      Connection con = DriverManager.getConnection(
//          "jdbc:mysql://localhost/checklist", "study", "Bitcamp!@#123");
//          "jdbc:mysql://db-ld285-kr.vpc-pub-cdb.ntruss.com/checklist", "study", "Bitcamp!@#123");

      connectionPool = new DBConnectionPool(
          "jdbc:mysql://db-ld285-kr.vpc-pub-cdb.ntruss.com/checklist", "study", "Bitcamp!@#123");
      txManager = new TransactionManager(connectionPool);

      toDoDao = new ToDoDaoImpl(connectionPool);

    } catch (Exception e) {
      System.out.println("통신 오류!");
      e.printStackTrace();
    }
  }

  void run() {
    try (ServerSocket serverSocket = new ServerSocket(8888)) {

      while (true) {
        Socket socket = serverSocket.accept();
        executorService.execute(() -> processRequest(socket));

      }
    } catch (Exception e) {
      System.out.println("서버 소켓 오류!");
      e.printStackTrace();

    } finally {
      connectionPool.closeAll();
    }
  }

  void processRequest(Socket socket) {
    try (DataInputStream in = new DataInputStream(socket.getInputStream());
        DataOutputStream out = new DataOutputStream(socket.getOutputStream());
        Prompt prompt = new Prompt(in, out)) {

      while (true) {
        try {
          mainMenu.execute(prompt);
          prompt.print("[[quit!]]");
          prompt.end();
          break;
        } catch (Exception e) {
          System.out.println("예외 발생!");
          e.printStackTrace();
        }
      }

    } catch (Exception e) {
      System.out.println("클라이언트 통신 오류!");
      e.printStackTrace();
    }
  }
}